{"version":3,"sources":["webpack://developer-portfolios/./src/components/developer-card.js","webpack://developer-portfolios/./src/components/developer-card.module.css","webpack://developer-portfolios/./src/components/letter.js","webpack://developer-portfolios/./src/components/letter.module.css","webpack://developer-portfolios/./src/pages/index.js"],"names":["name","url","image","className","href","rel","target","replace","G","gatsbyImageData","alt","letter","data","useStaticQuery","tmpLetter","title","allSitesYaml","edges","map","node","toLowerCase","key","toUpperCase","childScreenshot","screenshotFile","childImageSharp"],"mappings":"0NAKA,IAkCA,EAlCsB,SAAC,GAA0B,IAAxBA,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAClC,OACE,uBAAKC,UCNW,sCDOd,uBAAKA,UCNa,2CDOhB,0BAAKH,GACL,yBACE,qBAAGI,KAAMH,EAAKI,IAAI,aAAaC,OAAO,UACnCL,EACEM,QAAQ,WAAY,IACpBA,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,IAChBA,QAAQ,MAAO,OAIxB,uBAAKJ,UCjBc,4CDkBjB,qBAAGC,KAAMH,EAAKK,OAAO,SAASD,IAAI,cAC/BH,EACC,gBAAC,EAAAM,EAAD,CAAaN,MAAOA,EAAMO,gBAAiBC,IAAKV,IAEhD,qC,UEpBZ,IAcA,EAde,SAAC,GAAgB,IAAdW,EAAa,EAAbA,OAChB,OACE,uBAAKR,UCNsB,0CDOzB,uBAAKA,UCNiB,uCDOpB,wBAAMA,UCNY,qCDMkBQ,MEqF5C,EAtFkB,WAChB,IAAMC,GAAOC,oBAAe,cAuBxBC,EAAY,GAEhB,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,uCACA,uMAGmC,IACjC,qBACEX,KAAK,sDACLC,IAAI,aACJC,OAAO,UAHT,eAJF,oBAaA,2IAE6C,IAC3C,qBACEF,KAAK,sDACLC,IAAI,aACJC,OAAO,UAHT,QAHF,KAYA,wEAECM,EAAKI,aAAaC,MAAMC,KAAI,YAAe,IACI,EAavC,EAduBC,EAAW,EAAXA,KAC9B,OAAIL,IAAcK,EAAKnB,KAAK,GAAGoB,eAC7BN,EAAYK,EAAKnB,KAAK,GAAGoB,cAEvB,gCACE,gBAAC,EAAD,CAAQC,IAAKP,EAAWH,OAAQG,EAAUQ,gBAC1C,gBAAC,EAAD,CACED,IAAKF,EAAKnB,KACVA,KAAMmB,EAAKnB,KACXC,IAAKkB,EAAKlB,IACVC,MAAK,UAAEiB,EAAKI,uBAAP,aAAE,EAAsBC,eAAeC,oBAMhD,gBAAC,EAAD,CACEzB,KAAMmB,EAAKnB,KACXqB,IAAKF,EAAKnB,KACVC,IAAKkB,EAAKlB,IACVC,MAAK,UAAEiB,EAAKI,uBAAP,aAAE,EAAsBC,eAAeC","file":"component---src-pages-index-js-039492263c2888b4720b.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport * as style from \"./developer-card.module.css\"\n\nconst DeveloperCard = ({ name, url, image }) => {\n  return (\n    <div className={style.card}>\n      <div className={style.cardText}>\n        <h3>{name}</h3>\n        <p>\n          <a href={url} rel=\"noreferrer\" target=\"_blank\">\n            {url\n              .replace(\"https://\", \"\")\n              .replace(\"http://\", \"\")\n              .replace(\"www.\", \"\")\n              .replace(/\\/$/, \"\")}\n          </a>\n        </p>\n      </div>\n      <div className={style.cardImage}>\n        <a href={url} target=\"_blank\" rel=\"noreferrer\">\n          {image ? (\n            <GatsbyImage image={image.gatsbyImageData} alt={name} />\n          ) : (\n            <></>\n          )}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nDeveloperCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  image: PropTypes.object,\n}\n\nexport default DeveloperCard\n","// extracted by mini-css-extract-plugin\nexport const card = \"developer-card-module--card--1NVhA\";\nexport const cardText = \"developer-card-module--card-text--Yqifp\";\nexport const cardImage = \"developer-card-module--card-image--1zXhB\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport * as style from \"./letter.module.css\"\n\nconst Letter = ({ letter }) => {\n  return (\n    <div className={style.letterContainer}>\n      <div className={style.letterCircle}>\n        <span className={style.letterText}>{letter}</span>\n      </div>\n    </div>\n  )\n}\n\nLetter.propTypes = {\n  letter: PropTypes.string.isRequired,\n}\n\nexport default Letter\n","// extracted by mini-css-extract-plugin\nexport const letterContainer = \"letter-module--letter-container--3HG5a\";\nexport const letterCircle = \"letter-module--letter-circle--3WUbJ\";\nexport const letterText = \"letter-module--letter-text--2cxNL\";","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport DeveloperCard from \"../components/developer-card\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Letter from \"../components/letter\"\n\nconst IndexPage = () => {\n  const data = useStaticQuery(graphql`\n    query DevSiteQuery {\n      allSitesYaml {\n        edges {\n          node {\n            url\n            name\n            childScreenshot {\n              screenshotFile {\n                childImageSharp {\n                  gatsbyImageData(\n                    width: 700\n                    layout: CONSTRAINED\n                    placeholder: BLURRED\n                  )\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `)\n  let tmpLetter = \"\"\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <h2>Hi people</h2>\n      <p>\n        On this page you will find a list of developer portfolios from which you\n        can be inspired. This page was made possible by Emma Bostian, who\n        provides this information in her{\" \"}\n        <a\n          href=\"https://github.com/emmabostian/developer-portfolios\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          Github-Repo\n        </a>\n        . Thanks a lot â˜º\n      </p>\n      <p>\n        If you would like to see your portfolio on this page as well, please\n        share the information about your portfolio{\" \"}\n        <a\n          href=\"https://github.com/emmabostian/developer-portfolios\"\n          rel=\"noreferrer\"\n          target=\"_blank\"\n        >\n          here\n        </a>\n        .\n      </p>\n      <p>Now get inspired and build something great.</p>\n\n      {data.allSitesYaml.edges.map(({ node }) => {\n        if (tmpLetter !== node.name[0].toLowerCase()) {\n          tmpLetter = node.name[0].toLowerCase()\n          return (\n            <>\n              <Letter key={tmpLetter} letter={tmpLetter.toUpperCase()} />\n              <DeveloperCard\n                key={node.name}\n                name={node.name}\n                url={node.url}\n                image={node.childScreenshot?.screenshotFile.childImageSharp}\n              />\n            </>\n          )\n        } else {\n          return (\n            <DeveloperCard\n              name={node.name}\n              key={node.name}\n              url={node.url}\n              image={node.childScreenshot?.screenshotFile.childImageSharp}\n            />\n          )\n        }\n      })}\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}